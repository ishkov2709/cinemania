{"version":3,"file":"static/js/417.f5d4021a.chunk.js","mappings":"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","sources":["components/Actors/Actors.styled.jsx","components/Actors/Item/Item.styled.jsx","components/Actors/Item/Item.jsx","components/Actors/ActorsList/ActorsList.styled.jsx","components/Actors/ActorsList/ActorsList.jsx","components/Actors/Actors.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Section = styled.section`\r\n  padding-bottom: 24px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      padding-bottom: 120px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      padding-bottom: 90px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  max-width: 390px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      max-width: none;\r\n      width: 744px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      width: 1440px;\r\n\r\n      padding: 0 142px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PageWrapper = styled.div`\r\n  position: relative;\r\n\r\n  padding: 76px 12px 54px 12px;\r\n\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  backdrop-filter: blur(8px);\r\n\r\n  border-radius: 12px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      padding: 136px 18px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      padding: 116px 104px 80px 128px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BackLink = styled(Link)`\r\n  position: absolute;\r\n  top: 12px;\r\n  left: 12px;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  color: #000;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      top: 24px;\r\n      left: 24px;\r\n\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CloseLink = styled(Link)`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  color: #000;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      top: 24px;\r\n      right: 24px;\r\n\r\n      width: 50px;\r\n      height: 50px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemWrapper = styled.li`\r\n  width: 147px;\r\n\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  color: #000;\r\n\r\n  overflow: hidden;\r\n\r\n  border: 1px solid #000;\r\n  border-radius: 8px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      width: 204px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      width: 168px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  width: 147px;\r\n  height: 158px;\r\n\r\n  overflow: hidden;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      width: 204px;\r\n      height: 216px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      width: 168px;\r\n      height: 168px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n`;\r\n\r\nexport const InitialsWrapper = styled.div`\r\n  padding: 8px 12px;\r\n\r\n  text-align: center;\r\n`;\r\n\r\nexport const HeroName = styled.h4`\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n\r\n  margin-bottom: 6px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      font-size: 32px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TrueName = styled.p`\r\n  font-weight: 300;\r\n  font-size: 14px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n`;\r\n","import { Skeleton } from '@mui/material';\r\nimport { HeroName, Img, ImgWrapper, InitialsWrapper, ItemWrapper, TrueName } from './Item.styled';\r\nimport { useState } from 'react';\r\n\r\nconst Item = ({ character, profile_path, name }) => {\r\n  const [loadImg, setLoadImg] = useState(false);\r\n\r\n  const handleLoadImg = () => {\r\n    setLoadImg(true);\r\n  };\r\n\r\n  return (\r\n    <ItemWrapper>\r\n      <ImgWrapper>\r\n        <Img src={profile_path} loadImg={loadImg} onLoad={handleLoadImg} />\r\n        {!loadImg && (\r\n          <Skeleton\r\n            variant=\"rectangular\"\r\n            animation=\"wave\"\r\n            sx={{ bgcolor: 'rgba(121, 121, 121, 0.7)', width: '100%', height: '100%' }}\r\n          />\r\n        )}\r\n      </ImgWrapper>\r\n      <InitialsWrapper>\r\n        <HeroName>{character}</HeroName>\r\n        <TrueName>{name}</TrueName>\r\n      </InitialsWrapper>\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 24px;\r\n\r\n  @media screen and (max-width: 389px) {\r\n    & {\r\n      justify-content: center;\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 390px) {\r\n    & {\r\n      width: 318px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      gap: 20px;\r\n    }\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport Item from '../Item';\r\nimport { List } from './ActorsList.styled';\r\nimport baseImgActor from '../../../img/photoActor/img_actor.jpg';\r\n\r\nconst BASE_URL = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst ActorsList = () => {\r\n  const filmActors = useSelector(state => state.films.filmActors);\r\n\r\n  if (filmActors?.length)\r\n    return (\r\n      <List>\r\n        {filmActors.map(({ id, character, name, profile_path }) => (\r\n          <Item\r\n            key={id}\r\n            character={character}\r\n            name={name}\r\n            profile_path={profile_path ? `${BASE_URL}${profile_path}` : baseImgActor}\r\n          />\r\n        ))}\r\n      </List>\r\n    );\r\n};\r\n\r\nexport default ActorsList;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchFilmActors } from '../../store/films/operations';\r\nimport { useParams } from 'react-router-dom';\r\nimport { BackLink, CloseLink, Container, PageWrapper, Section } from './Actors.styled';\r\nimport { PiArrowBendUpLeftLight } from 'react-icons/pi';\r\nimport { RxCross1 } from 'react-icons/rx';\r\nimport { TailSpin } from 'react-loader-spinner';\r\nimport ActorsList from './ActorsList/ActorsList';\r\n\r\nconst Actors = () => {\r\n  const { filmId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(state => state.films.isLoading);\r\n  const location = useLocation();\r\n  const backLink = location.state?.from ?? '/catalog';\r\n  const closeLink = location.state?.from.state?.from ?? '/catalog';\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFilmActors(filmId));\r\n  }, [filmId, dispatch]);\r\n\r\n  return (\r\n    <Section>\r\n      <Container className=\"container\">\r\n        <PageWrapper>\r\n          <BackLink to={backLink}>\r\n            <PiArrowBendUpLeftLight style={{ width: 'inherit', height: 'inherit' }} />\r\n          </BackLink>\r\n          <CloseLink to={closeLink}>\r\n            <RxCross1 style={{ width: 'inherit', height: 'inherit' }} />\r\n          </CloseLink>\r\n\r\n          {isLoading && (\r\n            <TailSpin\r\n              height=\"80\"\r\n              width=\"80\"\r\n              color=\"#08B275\"\r\n              ariaLabel=\"tail-spin-loading\"\r\n              radius=\"1\"\r\n              wrapperStyle={{ padding: '40px 0', display: 'flex', justifyContent: 'center' }}\r\n              wrapperClass=\"\"\r\n              visible={true}\r\n            />\r\n          )}\r\n\r\n          {!isLoading && <ActorsList />}\r\n        </PageWrapper>\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","PageWrapper","_templateObject3","BackLink","Link","_templateObject4","CloseLink","_templateObject5","ItemWrapper","li","ImgWrapper","Img","img","InitialsWrapper","HeroName","h4","TrueName","p","_templateObject6","_ref","character","profile_path","name","_useState","useState","_useState2","_slicedToArray","loadImg","setLoadImg","_jsxs","children","_jsx","src","onLoad","Skeleton","variant","animation","sx","bgcolor","width","height","List","ul","filmActors","useSelector","state","films","length","map","id","Item","concat","baseImgActor","_location$state$from","_location$state","_location$state$from$","_location$state2","_location$state2$from","filmId","useParams","dispatch","useDispatch","isLoading","location","useLocation","backLink","from","closeLink","useEffect","fetchFilmActors","className","to","PiArrowBendUpLeftLight","style","RxCross1","TailSpin","color","ariaLabel","radius","wrapperStyle","padding","display","justifyContent","wrapperClass","visible","ActorsList"],"sourceRoot":""}