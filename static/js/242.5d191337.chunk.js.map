{"version":3,"file":"static/js/242.5d191337.chunk.js","mappings":"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","sources":["components/Catalog/FilmList/FilmList.styled.jsx","components/Catalog/FilmList/Item/Item.styled.jsx","components/Catalog/FilmList/Item/Item.jsx","components/Catalog/FilmList/FilmList.jsx","components/Favorites/Favorites.styled.jsx","components/Favorites/Favorites.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  row-gap: 24px;\r\n  column-gap: 20px;\r\n\r\n  margin: 0 auto 36px auto;\r\n\r\n  @media screen and (max-width: 389px) {\r\n    & {\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      column-gap: 48px;\r\n      row-gap: 24px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      column-gap: 24px;\r\n      row-gap: 50px;\r\n\r\n      margin: 0 auto 51px auto;\r\n    }\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ListItem = styled.li`\r\n  position: relative;\r\n\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const DetailsLink = styled(Link)`\r\n  display: block;\r\n\r\n  position: relative;\r\n  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\r\n    url(${props => props.urlbg});\r\n  background-size: cover;\r\n\r\n  color: inherit;\r\n\r\n  width: 161px;\r\n  height: 221px;\r\n\r\n  border: 1px solid #828282;\r\n  border-radius: inherit;\r\n\r\n  overflow: hidden;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    width: 272px;\r\n    height: 400px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: 212px;\r\n    height: 300px;\r\n  }\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  position: relative;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  border-radius: inherit;\r\n\r\n  overflow: hidden;\r\n\r\n  &::before {\r\n    content: '';\r\n\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background-color: ${({ loadImg }) => (loadImg ? 'rgba(0, 0, 0, 0.5)' : 'none')};\r\n  }\r\n\r\n  transform: scale(1);\r\n\r\n  transition: transform 250ms ease-in-out 500ms;\r\n\r\n  .link-details:hover & {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  display: ${({ loadImg }) => (loadImg ? 'block' : 'none')};\r\n`;\r\n\r\nexport const FavBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  padding: 0;\r\n\r\n  background: transparent;\r\n\r\n  border: none;\r\n\r\n  & .add {\r\n    color: #ffffff;\r\n\r\n    transition: color 250ms ease-in;\r\n  }\r\n\r\n  & .delete {\r\n    color: #881313;\r\n\r\n    transition: color 250ms ease-in;\r\n  }\r\n\r\n  &:hover .add,\r\n  &:hover .delete,\r\n  &:focus .add,\r\n  &:focus .delete {\r\n    color: rgba(136, 19, 19, 0.7);\r\n  }\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  min-width: 100px;\r\n\r\n  font-size: 20px;\r\n\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`;\r\n","import { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\r\nimport { useState } from 'react';\r\nimport { DetailsLink, FavBtn, Img, ImgWrapper, ListItem, Title } from './Item.styled';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Skeleton } from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToFav, delAsFav } from '../../../../store/auth/authSlice';\r\nimport { putUserdata } from '../../../../store/auth/operations';\r\nimport basePoster from '../../../../img/basePoster/img_poster.jpg';\r\n\r\nconst BASE_URL = 'https://image.tmdb.org/t/p/original';\r\n\r\nconst Item = ({ id, poster_path, title }) => {\r\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\r\n  const favFilms = useSelector(state => state.auth.favFilms);\r\n  const userId = useSelector(state => state.auth.userId);\r\n  const email = useSelector(state => state.auth.email);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const [loadImg, setLoadImg] = useState(false);\r\n\r\n  const handleImgLoad = () => {\r\n    setLoadImg(true);\r\n  };\r\n\r\n  const handleAddFavClick = e => {\r\n    e.preventDefault();\r\n    dispatch(addToFav({ id, poster_path, title }));\r\n    if (email !== 'guest')\r\n      dispatch(putUserdata({ userId, email, films: [...favFilms, { id, poster_path, title }] }));\r\n  };\r\n\r\n  const handleDelFavClick = e => {\r\n    e.preventDefault();\r\n    dispatch(delAsFav(id));\r\n    if (email !== 'guest')\r\n      dispatch(putUserdata({ userId, email, films: [...favFilms.filter(el => el.id !== id)] }));\r\n  };\r\n\r\n  return (\r\n    <ListItem>\r\n      <DetailsLink className=\"link-details\" to={`/catalog/${id}`} state={{ from: location }}>\r\n        <ImgWrapper loadImg={loadImg}>\r\n          {!loadImg && (\r\n            <Skeleton\r\n              variant=\"rectangular\"\r\n              animation=\"wave\"\r\n              sx={{\r\n                bgcolor: 'rgba(121, 121, 121, 0.7)',\r\n                width: 'inherit',\r\n                height: 'inherit',\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Img\r\n            src={poster_path ? `${BASE_URL}${poster_path}` : basePoster}\r\n            alt={title}\r\n            onLoad={handleImgLoad}\r\n            loadImg={loadImg}\r\n          />\r\n        </ImgWrapper>\r\n        {isLoggedIn && !favFilms?.find(el => el.id === id) && (\r\n          <FavBtn type=\"button\" onClick={handleAddFavClick}>\r\n            <AiOutlineHeart\r\n              className=\"add\"\r\n              style={{\r\n                width: 'inherit',\r\n                height: 'inherit',\r\n              }}\r\n            />\r\n          </FavBtn>\r\n        )}\r\n\r\n        {isLoggedIn && favFilms?.find(el => el.id === id) && (\r\n          <FavBtn type=\"button\" onClick={handleDelFavClick}>\r\n            <AiFillHeart\r\n              className=\"delete\"\r\n              style={{\r\n                width: 'inherit',\r\n                height: 'inherit',\r\n              }}\r\n            />\r\n          </FavBtn>\r\n        )}\r\n        <Title>{title}</Title>\r\n      </DetailsLink>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import { List } from './FilmList.styled';\r\nimport Item from './Item/Item';\r\n\r\nconst FilmList = ({ films }) => {\r\n  return (\r\n    <List>\r\n      {films.map(({ id, poster_path, title }) => (\r\n        <Item key={id} id={id} poster_path={poster_path} title={title} />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default FilmList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section``;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n\r\n  @media screen and (max-width: 743px) {\r\n    & {\r\n      max-width: 390px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      gap: 140px;\r\n      max-width: none;\r\n      width: 744px;\r\n\r\n      padding: 0 74px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      gap: 90px;\r\n      width: 1440px;\r\n\r\n      padding: 0 142px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n\r\n  text-align: center;\r\n\r\n  margin-bottom: 46px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    & {\r\n      font-size: 32px;\r\n\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EmptyWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 18px;\r\n\r\n  margin-bottom: 60px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      gap: 26px;\r\n\r\n      margin-bottom: 100px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  width: 72px;\r\n  height: 72px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      width: 96px;\r\n      height: 96px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const EmptyText = styled.p`\r\n  font-size: 18px;\r\n\r\n  @media screen and (min-width: 744px) {\r\n    & {\r\n      font-size: 26px;\r\n    }\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport {\r\n  Section,\r\n  Container,\r\n  Title,\r\n  EmptyWrapper,\r\n  EmptyText,\r\n  IconWrapper,\r\n} from './Favorites.styled';\r\nimport FilmList from '../Catalog/FilmList/FilmList';\r\nimport { TbMovieOff } from 'react-icons/tb';\r\n\r\nconst Favorites = () => {\r\n  const favFilms = useSelector(state => state.auth.favFilms);\r\n\r\n  return (\r\n    <Section>\r\n      <Container className=\"container\">\r\n        <Title>Фільми які вам сподобалися</Title>\r\n\r\n        {favFilms?.length > 0 && <FilmList films={favFilms} />}\r\n\r\n        {!favFilms?.length && (\r\n          <EmptyWrapper>\r\n            <IconWrapper>\r\n              <TbMovieOff color=\"#fff\" style={{ width: 'inherit', height: 'inherit' }} />\r\n            </IconWrapper>\r\n            <EmptyText>Список фільмів порожній...</EmptyText>\r\n          </EmptyWrapper>\r\n        )}\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","ListItem","li","DetailsLink","Link","_templateObject2","props","urlbg","ImgWrapper","div","_templateObject3","_ref","loadImg","Img","img","_templateObject4","_ref2","FavBtn","button","_templateObject5","Title","p","_templateObject6","id","poster_path","title","isLoggedIn","useSelector","state","auth","favFilms","userId","email","dispatch","useDispatch","location","useLocation","_useState","useState","_useState2","_slicedToArray","setLoadImg","_jsx","children","_jsxs","className","to","concat","from","Skeleton","variant","animation","sx","bgcolor","width","height","src","basePoster","alt","onLoad","find","el","type","onClick","e","preventDefault","addToFav","putUserdata","films","_toConsumableArray","AiOutlineHeart","style","delAsFav","filter","AiFillHeart","map","Item","Section","section","Container","h2","EmptyWrapper","IconWrapper","EmptyText","length","FilmList","TbMovieOff","color"],"sourceRoot":""}