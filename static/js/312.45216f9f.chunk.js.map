{"version":3,"file":"static/js/312.45216f9f.chunk.js","mappings":"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","sources":["components/FilmDetails/FilmDetails.styled.jsx","components/FilmDetails/FilmDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Skeleton } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding-bottom: 24px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      padding-bottom: 120px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      padding-bottom: 90px;\n    }\n  }\n`;\n\nexport const Container = styled.div`\n  max-width: 390px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      max-width: none;\n      width: 744px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      width: 1440px;\n\n      padding: 0 142px;\n    }\n  }\n`;\n\nexport const ContentBox = styled.div`\n  position: relative;\n\n  padding: 66px 35px;\n\n  min-height: 100%;\n\n  background-color: rgba(255, 255, 255, 0.6);\n  backdrop-filter: blur(8px);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      padding: 60px 120px 100px 120px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      min-height: auto;\n\n      padding: 116px 114px 80px 120px;\n    }\n  }\n`;\n\nexport const CloseLink = styled(Link)`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  color: #000;\n\n  @media screen and (min-width: 744px) {\n    & {\n      top: 24px;\n      right: 24px;\n    }\n  }\n`;\n\nexport const ImgBaseInfoWrapper = styled.div`\n  @media screen and (min-width: 1440px) {\n    & {\n      display: flex;\n      align-items: start;\n      gap: 20px;\n\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n  margin-bottom: 30px;\n\n  width: 100%;\n  max-height: 153px;\n\n  border-radius: 8px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: 744px) {\n    & {\n      max-height: 336px;\n\n      margin-bottom: 24px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      width: 355px;\n      max-height: 200px;\n\n      margin-bottom: 0;\n\n      display: inline-block;\n    }\n  }\n`;\n\nexport const Img = styled.img`\n  display: ${({ loadImg }) => (loadImg ? 'block' : 'none')};\n  width: 100%;\n\n  border-radius: 8px;\n`;\n\nexport const YearField = styled.p`\n  position: absolute;\n  bottom: 12px;\n  right: 12px;\n\n  font-weight: 500;\n  font-size: 16px;\n\n  &.second {\n    display: none;\n  }\n\n  @media screen and (min-width: 744px) {\n    & {\n      font-size: 24px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      position: static;\n      bottom: 0;\n      right: 0;\n\n      color: #000;\n    }\n\n    &.first {\n      display: none;\n    }\n\n    &.second {\n      display: block;\n\n      font-size: 18px;\n\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Year = styled.span`\n  font-weight: 300;\n`;\n\nexport const FlexDetailsWrapper = styled.div`\n  @media screen and (min-width: 1440px) {\n    & {\n      display: inline-block;\n\n      width: calc(100% - 335px);\n    }\n  }\n`;\n\nexport const TitleRateWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #000;\n\n  margin-bottom: 6px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      margin-bottom: 12px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Title = styled.h2`\n  font-weight: 400;\n  font-size: 32px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      font-size: 48px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      font-size: 34px;\n    }\n  }\n`;\n\nexport const RatingWrapper = styled.div``;\n\nexport const Rating = styled.p`\n  font-weight: 300;\n  font-size: 24px;\n`;\n\nexport const Description = styled.p`\n  color: #000;\n\n  font-weight: 400;\n  font-size: 14px;\n\n  margin-bottom: 12px;\n\n  &.second {\n    display: none;\n  }\n\n  @media screen and (min-width: 744px) {\n    & {\n      font-size: 20px;\n\n      margin-bottom: 16px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    &.first {\n      display: none;\n    }\n\n    &.second {\n      display: block;\n\n      font-size: 18px;\n\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  color: #000;\n\n  font-weight: 600;\n  font-size: 14px;\n\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      font-size: 24px;\n\n      margin-bottom: 12px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      font-size: 18px;\n\n      margin-bottom: 12px;\n    }\n  }\n`;\n\nexport const Generes = styled.p`\n  color: #000;\n\n  font-size: 14px;\n\n  margin-bottom: 18px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      font-size: 24px;\n\n      margin-bottom: 24px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      font-size: 18px;\n\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const ActorsLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 146px;\n  height: 40px;\n\n  margin: 0 auto;\n\n  color: #000;\n\n  text-decoration: none;\n\n  border: 1px solid #000;\n  border-radius: 8px;\n\n  @media screen and (min-width: 744px) {\n    & {\n      width: 236px;\n      height: 60px;\n\n      font-size: 32px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    & {\n      margin: 0 0 0 auto;\n\n      width: 180px;\n      height: 50px;\n\n      font-size: 24px;\n    }\n  }\n`;\n\nexport const ActorsLinkText = styled.span`\n  @media screen and (min-width: 1440px) {\n    & {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const SkeletonLoader = styled(Skeleton)`\n  width: 100%;\n  height: inherit;\n`;\n","import { useLocation, useParams } from 'react-router-dom';\nimport {\n  ActorsLink,\n  ActorsLinkText,\n  CloseLink,\n  Container,\n  ContentBox,\n  Description,\n  FlexDetailsWrapper,\n  Generes,\n  Img,\n  ImgBaseInfoWrapper,\n  ImgWrapper,\n  Rating,\n  RatingWrapper,\n  Section,\n  Subtitle,\n  Title,\n  TitleRateWrapper,\n  Year,\n  YearField,\n} from './FilmDetails.styled';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFilmById } from '../../store/films/operations';\nimport { RxCross1 } from 'react-icons/rx';\nimport detailPoster from '../../img/detailPoster/img_poster.jpg';\nimport { Skeleton } from '@mui/material';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/original';\n\nconst FilmDetails = () => {\n  const { filmId } = useParams();\n  const dispatch = useDispatch();\n  const filmDetails = useSelector(state => state.films.filmDetails);\n  const isLoading = useSelector(state => state.films.isLoading);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/catalog';\n  const [loadImg, setLoadImg] = useState(false);\n  useEffect(() => {\n    if (filmId) dispatch(fetchFilmById(filmId));\n  }, [dispatch, filmId]);\n\n  const changeIconSize = () => {\n    if (window.innerWidth < 744) return 30;\n    if (window.innerWidth >= 744) return 50;\n  };\n\n  const changeSkeletonWidth = () => {\n    if (window.innerWidth >= 1440) return 335;\n    if (window.innerWidth >= 744) return 456;\n    if (window.innerWidth < 744) return 272;\n  };\n\n  const changeSkeletonHeight = () => {\n    if (window.innerWidth >= 1440) return 200;\n    if (window.innerWidth >= 744) return 336;\n    if (window.innerWidth < 744) return 153;\n  };\n\n  const handleLoadImg = () => {\n    setLoadImg(true);\n  };\n\n  if (filmDetails !== null) {\n    const { backdrop_path, release_date, title, vote_average, overview, genres } = filmDetails;\n    return (\n      <Section>\n        <Container className=\"container\">\n          <ContentBox>\n            <CloseLink to={backLink}>\n              <RxCross1 size={changeIconSize()} />\n            </CloseLink>\n\n            {isLoading && (\n              <TailSpin\n                height=\"80\"\n                width=\"80\"\n                color=\"#08B275\"\n                ariaLabel=\"tail-spin-loading\"\n                radius=\"1\"\n                wrapperStyle={{ padding: '40px 0', display: 'flex', justifyContent: 'center' }}\n                wrapperClass=\"\"\n                visible={true}\n              />\n            )}\n\n            {!isLoading && (\n              <>\n                <ImgBaseInfoWrapper>\n                  <ImgWrapper>\n                    <Img\n                      src={backdrop_path ? `${BASE_URL}${backdrop_path}` : detailPoster}\n                      alt={title}\n                      loadImg={loadImg}\n                      onLoad={handleLoadImg}\n                      width={window.innerWidth >= 1440 ? 451 : 'auto'}\n                    />\n\n                    {!loadImg && (\n                      <Skeleton\n                        variant=\"rectangular\"\n                        width={changeSkeletonWidth()}\n                        height={changeSkeletonHeight()}\n                        animation=\"wave\"\n                        sx={{ bgcolor: 'rgba(121, 121, 121, 0.7)' }}\n                      />\n                    )}\n                    <YearField className=\"first\">\n                      Рік: <Year>{new Date(release_date).getFullYear()}</Year>\n                    </YearField>\n                  </ImgWrapper>\n\n                  <FlexDetailsWrapper>\n                    <TitleRateWrapper>\n                      <Title>{title}</Title>\n\n                      <RatingWrapper>\n                        <Rating>{(vote_average * 10).toFixed()}%</Rating>\n                      </RatingWrapper>\n                    </TitleRateWrapper>\n\n                    <YearField className=\"second\">\n                      Рік: <Year>{new Date(release_date).getFullYear()}</Year>\n                    </YearField>\n\n                    <Description className=\"first\">{overview}</Description>\n\n                    <Subtitle>Жанри:</Subtitle>\n                    <Generes>{genres.map(el => el.name).join(', ')}</Generes>\n                  </FlexDetailsWrapper>\n                </ImgBaseInfoWrapper>\n\n                <Description className=\"second\">{overview}</Description>\n\n                <ActorsLink to=\"actors\" state={{ from: location }}>\n                  <ActorsLinkText>Актори</ActorsLinkText>\n                </ActorsLink>\n              </>\n            )}\n          </ContentBox>\n        </Container>\n      </Section>\n    );\n  }\n};\n\nexport default FilmDetails;\n"],"names":["Section","styled","section","_templateObject","_taggedTemplateLiteral","Container","div","_templateObject2","ContentBox","_templateObject3","CloseLink","Link","_templateObject4","ImgBaseInfoWrapper","_templateObject5","ImgWrapper","_templateObject6","Img","img","_templateObject7","_ref","loadImg","YearField","p","_templateObject8","Year","span","_templateObject9","FlexDetailsWrapper","_templateObject10","TitleRateWrapper","_templateObject11","Title","h2","_templateObject12","RatingWrapper","_templateObject13","Rating","_templateObject14","Description","_templateObject15","Subtitle","h3","_templateObject16","Generes","_templateObject17","ActorsLink","_templateObject18","ActorsLinkText","_templateObject19","Skeleton","_templateObject20","_location$state$from","_location$state","filmId","useParams","dispatch","useDispatch","filmDetails","useSelector","state","films","isLoading","location","useLocation","backLink","from","_useState","useState","_useState2","_slicedToArray","setLoadImg","useEffect","fetchFilmById","backdrop_path","release_date","title","vote_average","overview","genres","_jsx","children","className","_jsxs","to","RxCross1","size","window","innerWidth","TailSpin","height","width","color","ariaLabel","radius","wrapperStyle","padding","display","justifyContent","wrapperClass","visible","_Fragment","src","concat","detailPoster","alt","onLoad","variant","animation","sx","bgcolor","Date","getFullYear","toFixed","map","el","name","join"],"sourceRoot":""}